#!/usr/bin/env python

import os
import sys
import traceback


try:
    import xml.etree.cElementTree as ET
except:
    try:
        import cElementTree as ET
    except:
        try:
            import elementtree.ElementTree as ET
        except:
            raise("Could not load element tree module. Please install python, python-celementtree, or python-elementtree")

def _convert_type_to_provider(conn):
    if 'type' in conn.attrib:
       type = conn.get('type')

       if 'Npgsql' in type:
           conn.set('provider', 'pgsql')
       elif 'Sqlite' in type:
           conn.set('provider', 'sqlite')

       del conn.attrib['type']


def convert_type_to_provider(root):
    dr = root.getroot()

    if dr.tag == 'connection':
        _convert_type_to_provider(dr)
    else:
        for conn in dr.findall('connections/connection'):
            _convert_type_to_provider(conn)


def help(name):
    print 'usage:', name.split(os.sep).pop(), 'repository [output]'

if __name__ == '__main__':
    if len(sys.argv) < 2 or len(sys.argv) > 3:
        help(sys.argv[0])
        sys.exit(0)

    if len(sys.argv) != 3:
        output = sys.argv[1]
    else:
        output = sys.argv[2]

    try:
        root = ET.parse(sys.argv[1])
    except:
        print 'Failed to load', sys.argv[1]
        traceback.print_exc()
        sys.exit(1)

    convert_type_to_provider(root)
    root.write(output, 'utf-8')
