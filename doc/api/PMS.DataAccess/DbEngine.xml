<Type Name="DbEngine" FullName="PMS.DataAccess.DbEngine">
  <TypeSignature Language="C#" Value="public static class DbEngine" />
  <AssemblyInfo>
    <AssemblyName>PMS</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Manages access to DbManager instance objects</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public static void BeginTransaction ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Begin transaction with <see cref="T:PMS.DataAccess.IDbManager" /></para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitTransaction">
      <MemberSignature Language="C#" Value="public static void CommitTransaction ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Commit transaction with <see cref="T:PMS.DataAccess.IDbManager" /></para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCount">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteCount (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteDelete (PMS.Query.IQuery query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="PMS.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="query">IQuery to call .Delete() on</param>
        <summary>Delete object based on IQuery</summary>
        <returns>DbResult</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteDelete (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Object to delete via QueryByObject</param>
        <summary>Delete object</summary>
        <returns>Result of query</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteDelete (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type to delete via QueryByType</param>
        <summary>Delete all objects of this type</summary>
        <returns>To be added.</returns>
        <remarks>Be careful what you wish for</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteInsert (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteNonQuery (string sql);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutePersist">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecutePersist (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Object to save</param>
        <summary>Insert or update object based on count retrieved</summary>
        <returns>Result of query</returns>
        <remarks>For the moment this is an ugly method which calls Exist() and then either Update() or Insert() accordingly</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public static System.Data.IDataReader ExecuteReader (string sql);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteScalar (string sql);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelectArray">
      <MemberSignature Language="C#" Value="public static object[] ExecuteSelectArray (PMS.Query.IQuery query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="PMS.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="query">Query to perform</param>
        <summary>Execute SQL built by IQuery and return instantiated classes</summary>
        <returns>Instantiated classes or null</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelectList">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ExecuteSelectList (PMS.Query.IQuery query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="PMS.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="query">Query to perform</param>
        <summary>Execute SQL built by IQuery and return instantiated classes inside IList</summary>
        <returns>CollectionBase of instantiated classes</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelectObject">
      <MemberSignature Language="C#" Value="public static object ExecuteSelectObject (PMS.Query.IQuery query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="PMS.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="query">Query to perform</param>
        <summary>
          <para>Execute SQL built by IQuery and return instantiated class</para>
        </summary>
        <returns>
          <para>Instantiated class or null</para>
        </returns>
        <remarks>
          <para>Selecting a single object implies LIMIT 1, feel free to change offset</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteUpdate (PMS.Query.IQuery query);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="PMS.Query.IQuery" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="public static PMS.Data.DbResult ExecuteUpdate (object obj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>PMS.Data.DbResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollbackTransaction">
      <MemberSignature Language="C#" Value="public static void RollbackTransaction ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Rollback transaction with <see cref="T:PMS.DataAccess.IDbManager" /></para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (PMS.Metadata.DbManagerMode mode);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="PMS.Metadata.DbManagerMode" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>
          <para>Start private <see cref="T:PMS.DataAccess.IDbManager" /> as specificed by DbManagerMode</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Stop private <see cref="T:PMS.DataAccess.IDbManager" /> as configured w/in repository.xml or .pmx</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
